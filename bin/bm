#!/usr/bin/env ruby

$: << File.join(File.dirname(__FILE__), "..", "lib", "/bookmarker")

require 'addressable/uri'
require 'nokogiri'
require 'couchrest'
require 'json'
require 'yaml'
require 'extlib'

require 'index'
require 'simplehttpclient'

module BookMarker
  class BM
    UNKNOWN = 0

    def initialize
      config = get_config
      @index = Index.new(config[:index][:path])
      @db = CouchRest.new(config[:db][:uri]).database(config[:db][:name])
    end

    def add(url, category)
      begin
        validate_url(url)
        @db.save_doc('_id' => Digest::SHA1.hexdigest(url), :url => url, :category => category, :status => UNKNOWN)
      rescue RestClient::RequestFailed => e
        puts "#{url} already in cache"
      rescue RuntimeError
        puts "Invalid URL"
      end
    end

    def write
      @db.view('bm/unprocessed')["rows"].each do |e|

        doc = e['value']

        begin
          response, html = download_url(doc['url'])
          if response.is_a? Net::HTTPOK
            title, body = process_document(html)

            res = @db.save_doc('_id' => doc['_id'], 'url' => doc['url'], 'category' => doc['category'], 'status' => 200, '_rev' => doc['_rev'])

            if res['ok']
              puts "#{doc['url']} added to index"
            end
            @index.open_for_writing
            @index.add({:url => doc['url'], :title => title, :body => body, :category => doc['category']})
          end
        rescue RuntimeError => e
          if e.message == 'Unsupported scheme'
            puts "Invalid URL"
          end
        rescue SocketError => e
          # There is a problem getting the uri so do nothing. We'll get
          # it next time we're online.
        end
      end
    end

    def search(query)
      begin
        @index.open_for_reading
        @index.run_query(query)
        @index.results do |r|
          yield r
        end
      rescue IOError => e
        puts "You don't appear to have added any urls! Please add some before you search."
      end
    end

    private
    def get_config
      Mash.new(YAML::load(File.open("#{ENV['HOME']}/.bookmarkerrc").read))
    end

    def validate_url(url)
      u = Addressable::URI::heuristic_parse(url)
      raise "Unsupported scheme" if u.scheme != "http" && u.scheme != "https"
    end

    def download_url(url)
      user_agent = "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.6) Gecko/20070725 Firefox/2.0.0.6"
      agent = SimpleHttpClient.new(user_agent, 20.0)
      return agent.get(url)
    end

    def process_document(html)
      document = Nokogiri(html)
      title = document.search('//title').inner_text.strip
      body = document.search('//body').inner_text.strip
      return title, body
    end
  end
end

def usage
  "usage: #{File.basename($0)} [add|search]"
  exit 1
end

bm = BookMarker::BM.new

if ARGV[0] == 'search'
  search_term = ARGV[1]
  bm.search(search_term) { |r| puts JSON.parse(r.document.data)['url'] }
elsif ARGV[0] == 'add'
  url = ARGV[1]
  if url.nil?
    url = `xsel -o`
    if url.nil? || url.empty?
      usage
    end
  end

  category = (ARGV[2].nil?) ? "unclassified" : ARGV[2]

  bm.add(url, category)
  bm.write
else
  usage
end
